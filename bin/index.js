#!/usr/bin/env node
/*!
@io-arc/static-files-meta-scraping
Analyze static files and extract meta information.

Version: 1.0.0
License: MIT
Documents: https://github.com/io-arc/static-files-meta-scraping

Copyright (c) 2021 arc one
*/
"use strict";var t=require("commander"),e=require("kleur"),r=require("update-notifier"),a=require("fs"),s=require("os"),i=require("path"),o=require("downloads-folder"),n=require("pug"),l=require("cheerio"),c=require("glob");function u(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var d=u(r),g=u(a),p=u(s),m=u(i),h=u(o),f=u(n),y=u(l),x=u(c);const v={search:[{target:"html[lang]",value:"lang"},{target:"head[prefix]",value:"prefix"},{target:"title"},{target:'meta[name="description"]'},{target:'meta[property="og:type"]'},{target:'meta[property="og:url"]'},{target:'meta[property="og:title"]'},{target:'meta[property="og:site_name"]'},{target:'meta[property="og:image"]'},{target:'meta[property="og:description"]'},{target:'meta[property="fb:app_id"]'},{target:'meta[name="twitter:card"]'},{target:'meta[name="twitter:site"]'},{target:'meta[name="twitter:creator"]'},{target:'meta[name="twitter:image"]'},{target:'meta[name="twitter:description"]'}],ext:"html",dir:"dist",root:"/"},w=/\.[^.]+$/,b=/\.(jpg|jpeg|gif|png|webp|svg)+$/i;class j{exit(t){console.log(e.red("Oops X(")),t&&console.log(e.red(JSON.stringify(t))),process.exit(1)}}class S extends j{#data=v;constructor(t){super();const e=this.#readFile();null!=e&&(this.#data={...this.#data,...e}),null!=t.ext&&(this.#data.ext=t.ext),null!=t.dir&&(this.#data.dir=t.dir),null!=t.root&&(this.#data.root=t.root)}targetExt(){return this.#data.ext}targetDir(){return this.#data.dir}searchProperties(){return this.#data.search}rootPath(){return this.#data.root}#readFile=()=>{const t=m.default.join(process.cwd(),".meta-scraping.json");if(g.default.existsSync(t))return JSON.parse(g.default.readFileSync(t,"utf8"));const e=m.default.join(p.default.homedir(),".meta-scraping.json");return g.default.existsSync(e)?JSON.parse(g.default.readFileSync(e,"utf8")):null}}const $="https://github.com/io-arc/static-files-meta-scraping",q={doctype:"html"};class E extends j{#body;constructor(t,e){super();const r=f.default.compileFile(m.default.join(__dirname,"templates","base.pug"),q),a=this.#html(t,e);this.#body=r({htmlItems:a,project:m.default.dirname($),homepage:$,version:"1.0.0"})}write(t){g.default.writeFileSync(`${m.default.join(t||h.default(),"result.html")}`,this.#body)}#html=(t,e)=>{const r=t.filter((t=>"html"===t.type)),a=[];return r.forEach((t=>{const e=[];t.data.forEach((t=>e.push({key:t.key,value:t.value,image:t.image}))),a.push({filename:t.filename,result:e})})),a}}class k extends j{#dir="";#files=[];constructor(t,e){super();const r=x.default.sync(`${t}/**/*.${/,/.test(e)?`{${e}}`:e}`);this.#files=this.#sort(r),this.#dir=t}exec(t,e){if(0===this.#files.length)return[];const r=[];return this.#files.forEach((a=>{const s=(t=>{const e=w.exec(t);if(null!=e)return e[0]})(a);if(null==s)return;const i=g.default.readFileSync(a,"utf8"),o=a.replace(`${this.#dir}/`,"");switch(s){case".css":return;default:const a=this.#html(i,t,e);return void r.push({filename:o,type:"html",data:a})}})),r}#sort=t=>t.sort(((t,e)=>{const r=w.exec(t),a=w.exec(e);if(!r)return a||t>e?-1:1;if(!a)return 1;const s=r[0],i=a[0];return s!==i?s>i?-1:1:t>e?-1:1}));#html=(t,e,r)=>{const a=y.default.load(t),s=[];return e.forEach((t=>{const e=a(t.target);if(0===e.length)return;const i=this.#attr(t);Array.from(e).forEach((e=>{const o=null==i?a(e).text():a(e).attr(i);if(null!=o)if(/ \d(.*)[a-zA-Z]/.test(o)){o.split(", ").forEach((e=>{const a=e.replace(/ \d(.*)[a-zA-Z]/,""),i=this.#image(a,r);s.push({key:t.target,value:a,image:i})}))}else{const e=this.#image(o,r);s.push({key:t.target,value:o,image:e})}}))})),s};#css=t=>{console.log(t)};#attr=t=>null!=t.value?""===t.value?null:t.value:/^meta/.test(t.target)?"content":/^link/.test(t.target)||/^a/.test(t.target)?"href":/^img\[srcset/.test(t.target)?"srcset":/^img/.test(t.target)||/^source/.test(t.target)||/^video/.test(t.target)?"src":null;#image=(t,e)=>{if(!b.test(t))return;t=t.replace(/https?:\/\/(.*?)\//,"").replace(/\?[^.]+$/,""),/^\//.test(t)||(t=`/${t}`);const r=new RegExp(`^${e}`);t=t.replace(r,"");const a=m.default.join(this.#dir,t);if(!g.default.existsSync(a))return"oops";const s=g.default.readFileSync(a,"base64"),i=this.#mime(a);return null==i?"unknown":`data:${i};base64,${s}`};#mime=t=>{const e=t.match(w);if(null!=e)switch(e[0].toLocaleLowerCase()){case".png":return"image/png";case".jpg":case".jpeg":return"image/jpeg";case".gif":return"image/gif";case"webp":return"image/webp";case".svg":return"image/svg+xml";default:return}}}(async r=>{d.default({pkg:{name:"@io-arc/static-files-meta-scraping",version:"1.0.0"}}).notify(),process.stdin.resume(),process.on("SIGINT",(()=>{console.log(e.bold("Bye !")),process.exit(0)})),t.program.version("1.0.0").option("-e, --ext <extensions>","Search target extensions. e.g. html,css",void 0).option("-d, --dir <target directory>","Search target directory",void 0).option("-r, --root <root path>","URL root path",void 0).parse(process.argv);const a=new S({ext:r.ext,dir:r.dir,root:r.root}),s=new k(a.targetDir(),a.targetExt()).exec(a.searchProperties(),a.rootPath());new E(s,a.searchProperties()).write(),process.exit(0)})(t.program.opts());
