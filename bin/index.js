#!/usr/bin/env node
/*!
@io-arc/static-files-meta-scraping
Analyze static files and extract meta information.

Version: 1.0.0
License: MIT
Documents: https://github.com/io-arc/static-files-meta-scraping

Copyright (c) 2021 arc one
*/
"use strict";var t=require("commander"),e=require("downloads-folder"),r=require("kleur"),i=require("update-notifier"),a=require("fs"),s=require("os"),o=require("path"),n=require("pug"),l=require("cheerio"),c=require("cli-progress"),u=require("glob"),d=require("inquirer");function p(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var f=p(e),g=p(i),h=p(a),m=p(s),y=p(o),x=p(n),w=p(l),v=p(c),b=p(u),$=p(d);const S={search:[{target:"html[lang]",value:"lang"},{target:"head[prefix]",value:"prefix"},{target:"title"},{target:'meta[name="description"]'},{target:'meta[property="og:type"]'},{target:'meta[property="og:url"]'},{target:'meta[property="og:title"]'},{target:'meta[property="og:site_name"]'},{target:'meta[property="og:image"]'},{target:'meta[property="og:description"]'},{target:'meta[property="fb:app_id"]'},{target:'meta[name="twitter:card"]'},{target:'meta[name="twitter:site"]'},{target:'meta[name="twitter:creator"]'},{target:'meta[name="twitter:image"]'},{target:'meta[name="twitter:description"]'}],ext:"html",dir:"dist",root:"/",output:f.default()},j=/\.[^.]+$/,q=/\.(jpg|jpeg|gif|png|webp|svg)+$/i;class E{exit(t){console.log(r.red("Oops X(")),t&&console.log(r.red(JSON.stringify(t))),process.exit(1)}terminate(){console.log(r.bold("Bye !")),process.exit(0)}}class F extends E{#data=S;constructor(t){super();const e=this.#readFile();null!=e&&(this.#data={...this.#data,...e}),null!=t.ext&&(this.#data.ext=t.ext),null!=t.dir&&(this.#data.dir=t.dir),null!=t.root&&(this.#data.root=t.root),null!=t.find&&(this.#data.find=t.find),null!=t.output&&(this.#data.output=t.output)}targetExt(){return this.#data.ext}targetDir(){return this.#data.dir}targetFind(){return this.#data.find}searchProperties(){return this.#data.search}rootPath(){return this.#data.root}output(){return this.#data.output}#readFile=()=>{const t=y.default.join(process.cwd(),".meta-scraping.json");if(h.default.existsSync(t))return JSON.parse(h.default.readFileSync(t,"utf8"));const e=y.default.join(m.default.homedir(),".meta-scraping.json");return h.default.existsSync(e)?JSON.parse(h.default.readFileSync(e,"utf8")):null}}const k="https://github.com/io-arc/static-files-meta-scraping",O={doctype:"html"};class C extends E{#body;constructor(t){super();const e=x.default.compileFile(y.default.join(__dirname,"templates","base.pug"),O),r=this.#html(t);this.#body=e({htmlItems:r,project:y.default.dirname(k),homepage:k,version:"1.0.0"})}write(t){try{const e=`${y.default.join(t,"result.html")}`;h.default.writeFileSync(e,this.#body),console.log(r.green().bold("\nCompleted file wrote.")),console.log(`Output: ${r.blue().bold(e)}`)}catch(t){this.exit(t)}}#html=t=>{const e=t.filter((t=>"html"===t.type)),r=[];return e.forEach((t=>{const e=[];t.data.forEach((t=>e.push({key:t.key,value:t.value,image:t.image}))),r.push({filename:t.filename,result:e})})),r}}class N extends E{#dir="";#files=[];#progress=new v.default.SingleBar({hideCursor:!0},v.default.Presets.shades_classic);constructor(t,e,r){super();const i=null!=r?`${t}/${/,/.test(r)?`{${r}}`:r}`:t,a=b.default.sync(`${i}/**/*.${/,/.test(e)?`{${e}}`:e}`);this.#files=this.#sort(a),this.#dir=t}exec(t,e){if(0===this.#files.length)return console.log(r.red("No match files.")),[];this.#progress.start(this.#files.length,0);const i=[];return this.#files.forEach((r=>{this.#progress.increment();if(null==this.#pickupExt(r))return;const a=h.default.readFileSync(r,"utf8"),s=r.replace(`${this.#dir}/`,""),o=this.#html(a,t,e);i.push({filename:s,type:"html",data:o})})),this.#progress.stop(),i}#sort=t=>t.sort(((t,e)=>{const r=t.split("/").length,i=e.split("/").length;if(r>i)return 1;if(r<i)return-1;const a=j.exec(t),s=j.exec(e);if(!a)return s||t>e?1:-1;if(!s)return-1;const o=a[0],n=s[0];return o!==n?o>n?1:-1:t>e?1:-1}));#html=(t,e,r)=>{const i=w.default.load(t),a=[];return e.forEach((t=>{const e=i(t.target);if(0===e.length)return;const s=this.#attr(t);Array.from(e).forEach((e=>{const o=null==s?i(e).text():i(e).attr(s);if(null!=o)if(/ \d(.*)[a-zA-Z]/.test(o)){o.split(", ").forEach((e=>{const i=e.replace(/ \d(.*)[a-zA-Z]/,""),s=this.#image(i,r);a.push({key:t.target,value:i,image:s})}))}else{const e=this.#image(o,r);a.push({key:t.target,value:o,image:e})}}))})),a};#pickupExt=t=>{const e=j.exec(t);if(null!=e)return e[0]};#attr=t=>null!=t.value?""===t.value?null:t.value:/^meta/.test(t.target)?"content":/^link/.test(t.target)||/^a/.test(t.target)?"href":/^img\[srcset/.test(t.target)?"srcset":/^img/.test(t.target)||/^source/.test(t.target)||/^video/.test(t.target)?"src":null;#image=(t,e)=>{if(!q.test(t))return;t=t.replace(/https?:\/\/(.*?)\//,"").replace(/\?[^.]+$/,""),/^\//.test(t)||(t=`/${t}`);const r=new RegExp(`^${e}`);t=t.replace(r,"");const i=y.default.join(this.#dir,t);if(!h.default.existsSync(i))return"oops";const a=h.default.readFileSync(i,"base64"),s=this.#mime(i);return null==s?"unknown":`data:${s};base64,${a}`};#mime=t=>{const e=t.match(j);if(null!=e)switch(e[0].toLocaleLowerCase()){case".png":return"image/png";case".jpg":case".jpeg":return"image/jpeg";case".gif":return"image/gif";case"webp":return"image/webp";case".svg":return"image/svg+xml";default:return}}}class P extends E{#dir;constructor(t){super(),this.#dir="boolean"==typeof t&&t?process.cwd():m.default.homedir()}async write(){try{const t=`${y.default.join(this.#dir,".meta-scraping.json")}`;if(h.default.existsSync(t)){if(!await this.#confirm())return void this.terminate()}const e=JSON.stringify(this.#preset(),null,2);h.default.writeFileSync(t,e),console.log(r.green().bold("Create a config file.")),console.log(`Saved in: ${r.blue(t)}`)}catch(t){this.exit(t)}}#confirm=async()=>{try{return(await $.default.prompt({type:"confirm",name:"confirm",message:"The file already exists, do you want to overwrite it?",default:!1})).confirm}catch(t){return this.exit(t),!1}};#preset=()=>{const{search:t,dir:e,root:r}=S;return{search:t,dir:e,root:r}}}g.default({pkg:{name:"@io-arc/static-files-meta-scraping",version:"1.0.0"}}).notify(),process.stdin.resume(),process.on("SIGINT",(()=>{console.log(r.bold("Bye !")),process.exit(0)})),t.program.version("1.0.0").addOption(new t.Option("-i, --init [save]","Create a settings file.\nIf don't parameter is save in the current directory").choices(["global"])).option("-d, --dir <directory>",`Search target output directory. (default: ${r.italic("dist")})`).option("-f, --find <directories>",`Specify a directory to be further targeted from the target directories.\nComma separated if there are multiple directories. (default: ${r.italic("undefined")})\ne.g. en,ja`).option("-r, --root <path>",`When searching for images, specify if the output file is different from the actual root path. (default: ${r.italic("/")})`).option("-o, --output <directory>",`Specifies the directory to output the result files. (default: ${r.italic(f.default())})`).parse(process.argv),(async t=>{if(null!=t.init){const e=new P(t.init);return await e.write(),void process.exit(0)}const e=new F(t),r=new N(e.targetDir(),e.targetExt(),e.targetFind()).exec(e.searchProperties(),e.rootPath());if(0===r.length)return void process.exit(0);new C(r).write(e.output()),process.exit(0)})(t.program.opts());
